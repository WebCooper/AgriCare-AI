/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/splash`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/login` | `/login`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/register` | `/register`; params?: Router.UnknownInputParams; } | { pathname: `${'/(onboarding)'}/intro1` | `/intro1`; params?: Router.UnknownInputParams; } | { pathname: `${'/(onboarding)'}/intro2` | `/intro2`; params?: Router.UnknownInputParams; } | { pathname: `${'/(onboarding)'}/intro3` | `/intro3`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/chatbot` | `/chatbot`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/history` | `/history`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/scan` | `/scan`; params?: Router.UnknownInputParams; } | { pathname: `/analysis`; params?: Router.UnknownInputParams; } | { pathname: `/offline`; params?: Router.UnknownInputParams; } | { pathname: `/weather`; params?: Router.UnknownInputParams; } | { pathname: `/report/[id]`, params: Router.UnknownInputParams & { id: string | number; } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/`; params?: Router.UnknownOutputParams; } | { pathname: `/splash`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(auth)'}/login` | `/login`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(auth)'}/register` | `/register`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(onboarding)'}/intro1` | `/intro1`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(onboarding)'}/intro2` | `/intro2`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(onboarding)'}/intro3` | `/intro3`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/chatbot` | `/chatbot`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/history` | `/history`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/scan` | `/scan`; params?: Router.UnknownOutputParams; } | { pathname: `/analysis`; params?: Router.UnknownOutputParams; } | { pathname: `/offline`; params?: Router.UnknownOutputParams; } | { pathname: `/weather`; params?: Router.UnknownOutputParams; } | { pathname: `/report/[id]`, params: Router.UnknownOutputParams & { id: string; } };
      href: Router.RelativePathString | Router.ExternalPathString | `/${`?${string}` | `#${string}` | ''}` | `/splash${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(auth)'}/login${`?${string}` | `#${string}` | ''}` | `/login${`?${string}` | `#${string}` | ''}` | `${'/(auth)'}/register${`?${string}` | `#${string}` | ''}` | `/register${`?${string}` | `#${string}` | ''}` | `${'/(onboarding)'}/intro1${`?${string}` | `#${string}` | ''}` | `/intro1${`?${string}` | `#${string}` | ''}` | `${'/(onboarding)'}/intro2${`?${string}` | `#${string}` | ''}` | `/intro2${`?${string}` | `#${string}` | ''}` | `${'/(onboarding)'}/intro3${`?${string}` | `#${string}` | ''}` | `/intro3${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/chatbot${`?${string}` | `#${string}` | ''}` | `/chatbot${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/history${`?${string}` | `#${string}` | ''}` | `/history${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/profile${`?${string}` | `#${string}` | ''}` | `/profile${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/scan${`?${string}` | `#${string}` | ''}` | `/scan${`?${string}` | `#${string}` | ''}` | `/analysis${`?${string}` | `#${string}` | ''}` | `/offline${`?${string}` | `#${string}` | ''}` | `/weather${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/splash`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/login` | `/login`; params?: Router.UnknownInputParams; } | { pathname: `${'/(auth)'}/register` | `/register`; params?: Router.UnknownInputParams; } | { pathname: `${'/(onboarding)'}/intro1` | `/intro1`; params?: Router.UnknownInputParams; } | { pathname: `${'/(onboarding)'}/intro2` | `/intro2`; params?: Router.UnknownInputParams; } | { pathname: `${'/(onboarding)'}/intro3` | `/intro3`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/chatbot` | `/chatbot`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/history` | `/history`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/scan` | `/scan`; params?: Router.UnknownInputParams; } | { pathname: `/analysis`; params?: Router.UnknownInputParams; } | { pathname: `/offline`; params?: Router.UnknownInputParams; } | { pathname: `/weather`; params?: Router.UnknownInputParams; } | `/report/${Router.SingleRoutePart<T>}` | { pathname: `/report/[id]`, params: Router.UnknownInputParams & { id: string | number; } };
    }
  }
}
